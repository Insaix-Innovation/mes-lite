{"ast":null,"code":"import { Grid } from \"./chunk-5FO2ZLZM.mjs\";\n\n// src/simple-grid.tsx\nimport { forwardRef, getToken, useTheme } from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(function SimpleGrid2(props, ref) {\n  const {\n    columns,\n    spacingX,\n    spacingY,\n    spacing,\n    minChildWidth,\n    ...rest\n  } = props;\n  const theme = useTheme();\n  const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n  return /* @__PURE__ */jsx(Grid, {\n    ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns,\n    ...rest\n  });\n});\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? \"\".concat(n, \"px\") : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, value => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : \"repeat(auto-fit, minmax(\".concat(_value, \", 1fr))\");\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(count, value => value === null ? null : \"repeat(\".concat(value, \", minmax(0, 1fr))\"));\n}\nexport { SimpleGrid };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}