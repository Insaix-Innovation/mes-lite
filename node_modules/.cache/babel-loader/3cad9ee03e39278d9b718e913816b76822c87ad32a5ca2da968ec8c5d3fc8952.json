{"ast":null,"code":"// src/wrap.tsx\nimport { chakra, forwardRef, tokenToCSSVar } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { Children, useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction px(value) {\n  return typeof value === \"number\" ? \"\".concat(value, \"px\") : value;\n}\nvar Wrap = forwardRef(function Wrap2(props, ref) {\n  const {\n    spacing = \"0.5rem\",\n    spacingX,\n    spacingY,\n    children,\n    justify,\n    direction,\n    align,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const styles = useMemo(() => {\n    const {\n      spacingX: x = spacing,\n      spacingY: y = spacing\n    } = {\n      spacingX,\n      spacingY\n    };\n    return {\n      \"--chakra-wrap-x-spacing\": theme => mapResponsive(x, value => px(tokenToCSSVar(\"space\", value)(theme))),\n      \"--chakra-wrap-y-spacing\": theme => mapResponsive(y, value => px(tokenToCSSVar(\"space\", value)(theme))),\n      \"--wrap-x-spacing\": \"calc(var(--chakra-wrap-x-spacing) / 2)\",\n      \"--wrap-y-spacing\": \"calc(var(--chakra-wrap-y-spacing) / 2)\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: justify,\n      alignItems: align,\n      flexDirection: direction,\n      listStyleType: \"none\",\n      padding: \"0\",\n      margin: \"calc(var(--wrap-y-spacing) * -1) calc(var(--wrap-x-spacing) * -1)\",\n      \"& > *:not(style)\": {\n        margin: \"var(--wrap-y-spacing) var(--wrap-x-spacing)\"\n      }\n    };\n  }, [spacing, spacingX, spacingY, justify, align, direction]);\n  const childrenToRender = useMemo(() => shouldWrapChildren ? Children.map(children, (child, index) => /* @__PURE__ */jsx(WrapItem, {\n    children: child\n  }, index)) : children, [children, shouldWrapChildren]);\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    className: cx(\"chakra-wrap\", className),\n    overflow: \"hidden\",\n    ...rest,\n    children: /* @__PURE__ */jsx(chakra.ul, {\n      className: \"chakra-wrap__list\",\n      __css: styles,\n      children: childrenToRender\n    })\n  });\n});\nWrap.displayName = \"Wrap\";\nvar WrapItem = forwardRef(function WrapItem2(props, ref) {\n  const {\n    className,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.li, {\n    ref,\n    __css: {\n      display: \"flex\",\n      alignItems: \"flex-start\"\n    },\n    className: cx(\"chakra-wrap__listitem\", className),\n    ...rest\n  });\n});\nWrapItem.displayName = \"WrapItem\";\nexport { Wrap, WrapItem };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}