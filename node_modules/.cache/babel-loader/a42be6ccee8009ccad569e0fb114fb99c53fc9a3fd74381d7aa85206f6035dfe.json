{"ast":null,"code":"import { useAccordionItem } from \"./chunk-JDQBKIKM.mjs\";\nimport { AccordionItemProvider, useAccordionStyles } from \"./chunk-JST25EWU.mjs\";\n\n// src/accordion-item.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AccordionItem = forwardRef(function AccordionItem2(props, ref) {\n  const {\n    children,\n    className\n  } = props;\n  const {\n    htmlProps,\n    ...context\n  } = useAccordionItem(props);\n  const styles = useAccordionStyles();\n  const containerStyles = {\n    ...styles.container,\n    overflowAnchor: \"none\"\n  };\n  const ctx = useMemo(() => context, [context]);\n  return /* @__PURE__ */jsx(AccordionItemProvider, {\n    value: ctx,\n    children: /* @__PURE__ */jsx(chakra.div, {\n      ref,\n      ...htmlProps,\n      className: cx(\"chakra-accordion__item\", className),\n      __css: containerStyles,\n      children: typeof children === \"function\" ? children({\n        isExpanded: !!context.isOpen,\n        isDisabled: !!context.isDisabled\n      }) : children\n    })\n  });\n});\nAccordionItem.displayName = \"AccordionItem\";\nexport { AccordionItem };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}