{"ast":null,"code":"import { sizes_default } from \"./chunk-X4JBRTE2.mjs\";\nimport { runIfFn } from \"./chunk-EBS47JIL.mjs\";\n\n// src/components/avatar.ts\nimport { avatarAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { createMultiStyleConfigHelpers, cssVar, defineStyle } from \"@chakra-ui/styled-system\";\nimport { isDark, randomColor } from \"@chakra-ui/theme-tools\";\nvar {\n  definePartsStyle,\n  defineMultiStyleConfig\n} = createMultiStyleConfigHelpers(parts.keys);\nvar $border = cssVar(\"avatar-border-color\");\nvar $bg = cssVar(\"avatar-bg\");\nvar baseStyleBadge = defineStyle({\n  borderRadius: \"full\",\n  border: \"0.2em solid\",\n  [$border.variable]: \"white\",\n  _dark: {\n    [$border.variable]: \"colors.gray.800\"\n  },\n  borderColor: $border.reference\n});\nvar baseStyleExcessLabel = defineStyle({\n  [$bg.variable]: \"colors.gray.200\",\n  _dark: {\n    [$bg.variable]: \"colors.whiteAlpha.400\"\n  },\n  bgColor: $bg.reference\n});\nvar $avatarBg = cssVar(\"avatar-background\");\nvar baseStyleContainer = defineStyle(props => {\n  const {\n    name,\n    theme\n  } = props;\n  const bg = name ? randomColor({\n    string: name\n  }) : \"colors.gray.400\";\n  const isBgDark = isDark(bg)(theme);\n  let color = \"white\";\n  if (!isBgDark) color = \"gray.800\";\n  return {\n    bg: $avatarBg.reference,\n    \"&:not([data-loaded])\": {\n      [$avatarBg.variable]: bg\n    },\n    color,\n    [$border.variable]: \"colors.white\",\n    _dark: {\n      [$border.variable]: \"colors.gray.800\"\n    },\n    borderColor: $border.reference,\n    verticalAlign: \"top\"\n  };\n});\nvar baseStyle = definePartsStyle(props => ({\n  badge: runIfFn(baseStyleBadge, props),\n  excessLabel: runIfFn(baseStyleExcessLabel, props),\n  container: runIfFn(baseStyleContainer, props)\n}));\nfunction getSize(size) {\n  const themeSize = size !== \"100%\" ? sizes_default[size] : void 0;\n  return definePartsStyle({\n    container: {\n      width: size,\n      height: size,\n      fontSize: \"calc(\".concat(themeSize != null ? themeSize : size, \" / 2.5)\")\n    },\n    excessLabel: {\n      width: size,\n      height: size\n    },\n    label: {\n      fontSize: \"calc(\".concat(themeSize != null ? themeSize : size, \" / 2.5)\"),\n      lineHeight: size !== \"100%\" ? themeSize != null ? themeSize : size : void 0\n    }\n  });\n}\nvar sizes = {\n  \"2xs\": getSize(4),\n  xs: getSize(6),\n  sm: getSize(8),\n  md: getSize(12),\n  lg: getSize(16),\n  xl: getSize(24),\n  \"2xl\": getSize(32),\n  full: getSize(\"100%\")\n};\nvar avatarTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\"\n  }\n});\nexport { avatarTheme };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}