{"ast":null,"code":"// src/slider-utils.ts\nfunction getIds(id) {\n  return {\n    root: \"slider-root-\".concat(id),\n    getThumb: i => \"slider-thumb-\".concat(id, \"-\").concat(i),\n    getInput: i => \"slider-input-\".concat(id, \"-\").concat(i),\n    track: \"slider-track-\".concat(id),\n    innerTrack: \"slider-filled-track-\".concat(id),\n    getMarker: i => \"slider-marker-\".concat(id, \"-\").concat(i),\n    output: \"slider-output-\".concat(id)\n  };\n}\nfunction orient(options) {\n  const {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nvar zeroSize = {\n  width: 0,\n  height: 0\n};\nvar normalize = a => a || zeroSize;\nfunction getStyles(options) {\n  const {\n    orientation,\n    thumbPercents,\n    thumbRects,\n    isReversed\n  } = options;\n  const getThumbStyle = i => {\n    var _a;\n    const rect = (_a = thumbRects[i]) != null ? _a : zeroSize;\n    return {\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: \"calc(\".concat(thumbPercents[i], \"% - \").concat(rect.height / 2, \"px)\")\n        },\n        horizontal: {\n          left: \"calc(\".concat(thumbPercents[i], \"% - \").concat(rect.width / 2, \"px)\")\n        }\n      })\n    };\n  };\n  const size = orientation === \"vertical\" ? thumbRects.reduce((a, b) => normalize(a).height > normalize(b).height ? a : b, zeroSize) : thumbRects.reduce((a, b) => normalize(a).width > normalize(b).width ? a : b, zeroSize);\n  const rootStyle = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: size ? {\n        paddingLeft: size.width / 2,\n        paddingRight: size.width / 2\n      } : {},\n      horizontal: size ? {\n        paddingTop: size.height / 2,\n        paddingBottom: size.height / 2\n      } : {}\n    })\n  };\n  const trackStyle = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\"\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\"\n      }\n    })\n  };\n  const isSingleThumb = thumbPercents.length === 1;\n  const fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]];\n  const range = isSingleThumb ? fallback : thumbPercents;\n  let start = range[0];\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start;\n  }\n  const percent = Math.abs(range[range.length - 1] - range[0]);\n  const innerTrackStyle = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed ? {\n        height: \"\".concat(percent, \"%\"),\n        top: \"\".concat(start, \"%\")\n      } : {\n        height: \"\".concat(percent, \"%\"),\n        bottom: \"\".concat(start, \"%\")\n      },\n      horizontal: isReversed ? {\n        width: \"\".concat(percent, \"%\"),\n        right: \"\".concat(start, \"%\")\n      } : {\n        width: \"\".concat(percent, \"%\"),\n        left: \"\".concat(start, \"%\")\n      }\n    })\n  };\n  return {\n    trackStyle,\n    innerTrackStyle,\n    rootStyle,\n    getThumbStyle\n  };\n}\nfunction getIsReversed(options) {\n  const {\n    isReversed,\n    direction,\n    orientation\n  } = options;\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed;\n  }\n  return !isReversed;\n}\nexport { getIds, orient, getStyles, getIsReversed };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}