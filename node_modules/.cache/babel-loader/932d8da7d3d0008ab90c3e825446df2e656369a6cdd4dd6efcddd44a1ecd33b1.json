{"ast":null,"code":"// src/control-box.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ControlBox = props => {\n  const {\n    type = \"checkbox\",\n    _hover,\n    _invalid,\n    _disabled,\n    _focus,\n    _checked,\n    _child = {\n      opacity: 0\n    },\n    _checkedAndChild = {\n      opacity: 1\n    },\n    _checkedAndDisabled,\n    _checkedAndFocus,\n    _checkedAndHover,\n    children,\n    ...rest\n  } = props;\n  const checkedAndDisabled = \"input[type=\".concat(type, \"]:checked:disabled + &\");\n  const checkedAndHover = \"input[type=\".concat(type, \"]:checked:hover:not(:disabled) + &\");\n  const checkedAndFocus = \"input[type=\".concat(type, \"]:checked:focus + &\");\n  const disabled = \"input[type=\".concat(type, \"]:disabled + &\");\n  const focus = \"input[type=\".concat(type, \"]:focus + &\");\n  const hover = \"input[type=\".concat(type, \"]:hover:not(:disabled):not(:checked) + &\");\n  const checked = \"input[type=\".concat(type, \"]:checked + &, input[type=\").concat(type, \"][aria-checked=mixed] + &\");\n  const invalid = \"input[type=\".concat(type, \"][aria-invalid=true] + &\");\n  const child = \"& > *\";\n  return /* @__PURE__ */jsx(chakra.div, {\n    ...rest,\n    \"aria-hidden\": true,\n    __css: {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      transitionProperty: \"common\",\n      transitionDuration: \"fast\",\n      flexShrink: 0,\n      [focus]: _focus,\n      [hover]: _hover,\n      [disabled]: _disabled,\n      [invalid]: _invalid,\n      [checkedAndDisabled]: _checkedAndDisabled,\n      [checkedAndFocus]: _checkedAndFocus,\n      [checkedAndHover]: _checkedAndHover,\n      [child]: _child,\n      [checked]: {\n        ..._checked,\n        [child]: _checkedAndChild\n      }\n    },\n    children\n  });\n};\nControlBox.displayName = \"ControlBox\";\nvar control_box_default = ControlBox;\nexport { ControlBox, control_box_default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}