{"ast":null,"code":"import { PopoverTransition } from \"./chunk-LZVBC5YS.mjs\";\nimport { usePopoverContext, usePopoverStyles } from \"./chunk-FOAN3JQV.mjs\";\n\n// src/popover-content.tsx\nimport { callAll, cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PopoverContent = forwardRef(function PopoverContent2(props, ref) {\n  const {\n    rootProps,\n    motionProps,\n    ...contentProps\n  } = props;\n  const {\n    getPopoverProps,\n    getPopoverPositionerProps,\n    onAnimationComplete\n  } = usePopoverContext();\n  const styles = usePopoverStyles();\n  const contentStyles = {\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    ...styles.content\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ...getPopoverPositionerProps(rootProps),\n    __css: styles.popper,\n    className: \"chakra-popover__popper\",\n    children: /* @__PURE__ */jsx(PopoverTransition, {\n      ...motionProps,\n      ...getPopoverProps(contentProps, ref),\n      onAnimationComplete: callAll(onAnimationComplete, contentProps.onAnimationComplete),\n      className: cx(\"chakra-popover__content\", props.className),\n      __css: contentStyles\n    })\n  });\n});\nPopoverContent.displayName = \"PopoverContent\";\nexport { PopoverContent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}