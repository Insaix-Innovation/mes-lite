{"ast":null,"code":"// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: \"ListStylesContext\",\n  errorMessage: \"useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<List />\\\" \"\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? {\n    [selector]: {\n      mt: spacing\n    }\n  } : {};\n  return /* @__PURE__ */jsx(ListStylesProvider, {\n    value: styles,\n    children: /* @__PURE__ */jsx(chakra.ul, {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: {\n        ...styles.container,\n        ...spacingStyle\n      },\n      ...rest,\n      children: validChildren\n    })\n  });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const {\n    as,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(List, {\n    ref,\n    as: \"ol\",\n    styleType: \"decimal\",\n    marginStart: \"1em\",\n    ...rest\n  });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const {\n    as,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(List, {\n    ref,\n    as: \"ul\",\n    styleType: \"initial\",\n    marginStart: \"1em\",\n    ...rest\n  });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */jsx(chakra.li, {\n    ref,\n    ...props,\n    __css: styles.item\n  });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */jsx(Icon, {\n    ref,\n    role: \"presentation\",\n    ...props,\n    __css: styles.icon\n  });\n});\nListIcon.displayName = \"ListIcon\";\nexport { useListStyles, List, OrderedList, UnorderedList, ListItem, ListIcon };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}