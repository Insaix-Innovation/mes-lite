{"ast":null,"code":"import { TriangleDownIcon, TriangleUpIcon } from \"./chunk-ATDT5RFJ.mjs\";\nimport { useNumberInput } from \"./chunk-RBDW77H4.mjs\";\n\n// src/number-input.tsx\nimport { useFormControlProps } from \"@chakra-ui/form-control\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [NumberInputStylesProvider, useNumberInputStyles] = createContext({\n  name: \"NumberInputStylesContext\",\n  errorMessage: \"useNumberInputStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<NumberInput />\\\" \"\n});\nvar [NumberInputProvider, useNumberInputContext] = createContext({\n  name: \"NumberInputContext\",\n  errorMessage: \"useNumberInputContext: `context` is undefined. Seems you forgot to wrap number-input's components within <NumberInput />\"\n});\nvar NumberInput = forwardRef(function NumberInput2(props, ref) {\n  const styles = useMultiStyleConfig(\"NumberInput\", props);\n  const ownProps = omitThemingProps(props);\n  const controlProps = useFormControlProps(ownProps);\n  const {\n    htmlProps,\n    ...context\n  } = useNumberInput(controlProps);\n  const ctx = useMemo(() => context, [context]);\n  return /* @__PURE__ */jsx(NumberInputProvider, {\n    value: ctx,\n    children: /* @__PURE__ */jsx(NumberInputStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */jsx(chakra.div, {\n        ...htmlProps,\n        ref,\n        className: cx(\"chakra-numberinput\", props.className),\n        __css: {\n          position: \"relative\",\n          zIndex: 0,\n          ...styles.root\n        }\n      })\n    })\n  });\n});\nNumberInput.displayName = \"NumberInput\";\nvar NumberInputStepper = forwardRef(function NumberInputStepper2(props, ref) {\n  const styles = useNumberInputStyles();\n  return /* @__PURE__ */jsx(chakra.div, {\n    \"aria-hidden\": true,\n    ref,\n    ...props,\n    __css: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"absolute\",\n      top: \"0\",\n      insetEnd: \"0px\",\n      margin: \"1px\",\n      height: \"calc(100% - 2px)\",\n      zIndex: 1,\n      ...styles.stepperGroup\n    }\n  });\n});\nNumberInputStepper.displayName = \"NumberInputStepper\";\nvar NumberInputField = forwardRef(function NumberInputField2(props, ref) {\n  const {\n    getInputProps\n  } = useNumberInputContext();\n  const input = getInputProps(props, ref);\n  const styles = useNumberInputStyles();\n  return /* @__PURE__ */jsx(chakra.input, {\n    ...input,\n    className: cx(\"chakra-numberinput__field\", props.className),\n    __css: {\n      width: \"100%\",\n      ...styles.field\n    }\n  });\n});\nNumberInputField.displayName = \"NumberInputField\";\nvar StyledStepper = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1,\n    transitionProperty: \"common\",\n    transitionDuration: \"normal\",\n    userSelect: \"none\",\n    cursor: \"pointer\",\n    lineHeight: \"normal\"\n  }\n});\nvar NumberDecrementStepper = forwardRef(function NumberDecrementStepper2(props, ref) {\n  var _a;\n  const styles = useNumberInputStyles();\n  const {\n    getDecrementButtonProps\n  } = useNumberInputContext();\n  const decrement = getDecrementButtonProps(props, ref);\n  return /* @__PURE__ */jsx(StyledStepper, {\n    ...decrement,\n    __css: styles.stepper,\n    children: (_a = props.children) != null ? _a : /* @__PURE__ */jsx(TriangleDownIcon, {})\n  });\n});\nNumberDecrementStepper.displayName = \"NumberDecrementStepper\";\nvar NumberIncrementStepper = forwardRef(function NumberIncrementStepper2(props, ref) {\n  var _a;\n  const {\n    getIncrementButtonProps\n  } = useNumberInputContext();\n  const increment = getIncrementButtonProps(props, ref);\n  const styles = useNumberInputStyles();\n  return /* @__PURE__ */jsx(StyledStepper, {\n    ...increment,\n    __css: styles.stepper,\n    children: (_a = props.children) != null ? _a : /* @__PURE__ */jsx(TriangleUpIcon, {})\n  });\n});\nNumberIncrementStepper.displayName = \"NumberIncrementStepper\";\nexport { useNumberInputStyles, NumberInput, NumberInputStepper, NumberInputField, StyledStepper, NumberDecrementStepper, NumberIncrementStepper };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}