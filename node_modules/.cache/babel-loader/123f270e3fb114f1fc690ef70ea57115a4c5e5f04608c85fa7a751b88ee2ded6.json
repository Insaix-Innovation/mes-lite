{"ast":null,"code":"import { AvatarName } from \"./chunk-XLTSJSZV.mjs\";\nimport { GenericAvatarIcon } from \"./chunk-ZXZNYCCD.mjs\";\n\n// src/avatar-image.tsx\nimport { useImage } from \"@chakra-ui/image\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction AvatarImage(props) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = /* @__PURE__ */jsx(GenericAvatarIcon, {}),\n    ignoreFallback,\n    referrerPolicy,\n    crossOrigin\n  } = props;\n  const status = useImage({\n    src,\n    onError,\n    ignoreFallback\n  });\n  const hasLoaded = status === \"loaded\";\n  const showFallback = !src || !hasLoaded;\n  if (showFallback) {\n    return name ? /* @__PURE__ */jsx(AvatarName, {\n      className: \"chakra-avatar__initials\",\n      getInitials,\n      name\n    }) : cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  return /* @__PURE__ */jsx(chakra.img, {\n    src,\n    srcSet,\n    alt: name,\n    onLoad,\n    referrerPolicy,\n    crossOrigin: crossOrigin != null ? crossOrigin : void 0,\n    className: \"chakra-avatar__img\",\n    loading,\n    __css: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius\n    }\n  });\n}\nAvatarImage.displayName = \"AvatarImage\";\nexport { AvatarImage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}